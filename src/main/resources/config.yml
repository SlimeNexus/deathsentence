#
#  _____  ______       _______ _    _
# |  __ \|  ____|   /\|__   __| |  | |
# | |  | | |__     /  \  | |  | |__| |
# | |  | |  __|   / /\ \ | |  |  __  |
# | |__| | |____ / ____ \| |  | |  | |
# |_____/|______/_/  _ \_\_|__|_|__|_|_   _  _____ ______
#  / ____|  ____| \ | |__   __|  ____| \ | |/ ____|  ____|
# | (___ | |__  |  \| |  | |  | |__  |  \| | |    | |__
#  \___ \|  __| | . ` |  | |  |  __| | . ` | |    |  __|
#  ____) | |____| |\  |  | |  | |____| |\  | |____| |____
# |_____/|______|_| \_|  |_|  |______|_| \_|\_____|______|
#
# Config generated with plugin version: @version@
#

# Template for the death messages.
# %message% is replaced by the actual death message.
message_template: "<bold><red>DEATH</red></bold> <dark_gray>|</dark_gray> <gray>%message%</gray>"

# Cooldown in seconds for when the next death message can appear after a player died.
# This cooldown can be bypassed with permission "deathsentence.bypass.cooldown"
cooldown_seconds: 60

# Whether to print a detailed message to console when a player dies.
log_deaths: true

#
# This plugin allows you to configure death messages for very specific circumstances.
# This freedom also means that it's very hard to cover all the possible ways in which
# a player can die in the configuration. This is why the plugin relies heavily on
# fallback messages. Here is an example of which places in the configuration the plugin
# checks first when a player is killed by a skeleton hitting the player with a bow
# which has a custom name (damage type: arrow).
#
# 1) special_item_death -> skeleton -> arrow
# 2) special_item_death -> skeleton -> generic
# 3) special_item_death -> default -> arrow
# 4) special_item_death -> default -> generic
# 5) entity_death -> skeleton -> arrow
# 6) entity_death -> skeleton -> generic
# 7) entity_death -> default -> arrow
# 8) entity_death -> default -> generic
# 9) natural_death -> arrow
# 10) natural_death -> generic
#
# If the skeleton was holding a weapon with no custom name, the lookup would start at
# step 5. If the player had died from a dispenser firing the arrow, the lookup would
# start at step 9.
#

# Map of natural death messages categorized by damage type.
# A list of vanilla damage types can be found here: https://minecraft.wiki/w/Damage_type
natural_death:

  # Example entry: Damage caused by a cactus
  cactus:
    # Regular death message
    - "%player% prickled themselves to death on a cactus."

    # Advanced death message
    - # Actual message
      message: "%player% touched one prickly boy."
      # Weight option controlling how likely this message is to be chosen
      # Since this message has a weight of 0.1, it's less likely to appear
      weight: 0.1
      # Death message should only work in the nether
      world_type: "nether"
      # Death message should only appear if the player has permission node "example.death.message"
      permission: "example.death.message"

# This section is used if an entity killed a player without using a special item.
# It contains a map of death messages categorized by entity type and damage type.
entity_death:
  default:
    melee:
      - "%player% was slain."
      - "%player% was slain by %attacker%."
    thorns:
      - "%player% discovered that %attacker% has thorns"
    generic:
      - "%player% was killed by %attacker%."

  player:
    arrow:
      - "%player% was shot by %attacker%."
    player_attack:
      - "%player% was killed by %attacker%."

  zombie:
    generic:
      - "%player% was zombified."

# This category is used if an entity killed a player without using a special item.
# It contains a map of death messages categorized by entity type and damage type.
special_item_death:
  default:
    generic:
      - "%player% was killed by %attacker% using %item%."
    melee:
      - "%player% was slain by %attacker% using %item%."

  player:
    arrow:
      - "%player% was shot by %attacker% using %item%."
    player_attack:
      - "%player% was killed by %attacker% using %item%."
